# Generated by Django 5.2.6 on 2025-10-10 13:07
# etna:allowAlterField
import app.ciim.blocks
import django.core.validators
import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0121_remove_pagegalleryimage_alt_text_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 37)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Supertitle', 'max_length': 20, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 4: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 5: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('supertitle', 1), ('title', 2), ('description', 3), ('url', 4), ('image', 5)]], {}), 7: ('app.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('page', 7), ('teaser_text', 8)]], {}), 10: ('app.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 11: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 12: ('wagtail.blocks.StructBlock', [[('image', 10), ('caption', 11)]], {}), 13: ('wagtail.blocks.CharBlock', (), {'required': False}), 14: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 15: ('wagtail.blocks.ListBlock', (12,), {}), 16: ('wagtail.blocks.StructBlock', [[('title', 13), ('description', 14), ('images', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 18: ('app.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'rendition_size': 'fill-960x540', 'required': False}), 19: ('app.media.blocks.MediaChooserBlock', (), {}), 20: ('wagtail.blocks.StructBlock', [[('title', 17), ('thumbnail', 18), ('media', 19)]], {}), 21: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 22: ('wagtail.blocks.StructBlock', [[('text', 21)]], {}), 23: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 24: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('quote', 23), ('attribution', 24)]], {}), 26: ('wagtail.blocks.ListBlock', (app.ciim.blocks.RecordLinkBlock,), {'label': 'Items'}), 27: ('wagtail.blocks.StructBlock', [[('items', 26)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 29: ('wagtail.blocks.StructBlock', [[('heading', 28)]], {}), 30: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100, 'required': True}), 31: ('wagtail.blocks.CharBlock', (), {'label': 'YouTube Video ID', 'max_length': 11, 'required': True, 'validators': [django.core.validators.RegexValidator(message='Invalid YouTube Video ID', regex='^[a-zA-Z0-9_-]{11}$')]}), 32: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Preview Image', 'rendition_size': 'fill-640x360', 'required': True}), 33: ('wagtail.blocks.RichTextBlock', (), {'label': 'Transcript', 'required': False}), 34: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Tick if the video has captions on YouTube', 'label': 'Captions available', 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('title', 30), ('video_id', 31), ('preview_image', 32), ('transcript', 33), ('captions_available', 34)]], {}), 36: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 6), ('featured_page', 9), ('image', 12), ('image_gallery', 16), ('media', 20), ('paragraph', 22), ('quote', 25), ('record_links', 27), ('sub_heading', 29), ('youtube_video', 35)]], {'required': False}), 37: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 36)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='focusedarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 37)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Supertitle', 'max_length': 20, 'required': False}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 3: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 4: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 5: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 6: ('wagtail.blocks.StructBlock', [[('supertitle', 1), ('title', 2), ('description', 3), ('url', 4), ('image', 5)]], {}), 7: ('app.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 8: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 9: ('wagtail.blocks.StructBlock', [[('page', 7), ('teaser_text', 8)]], {}), 10: ('app.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 11: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 12: ('wagtail.blocks.StructBlock', [[('image', 10), ('caption', 11)]], {}), 13: ('wagtail.blocks.CharBlock', (), {'required': False}), 14: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 15: ('wagtail.blocks.ListBlock', (12,), {}), 16: ('wagtail.blocks.StructBlock', [[('title', 13), ('description', 14), ('images', 15)]], {}), 17: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 18: ('app.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'rendition_size': 'fill-960x540', 'required': False}), 19: ('app.media.blocks.MediaChooserBlock', (), {}), 20: ('wagtail.blocks.StructBlock', [[('title', 17), ('thumbnail', 18), ('media', 19)]], {}), 21: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 22: ('wagtail.blocks.StructBlock', [[('text', 21)]], {}), 23: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 24: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 25: ('wagtail.blocks.StructBlock', [[('quote', 23), ('attribution', 24)]], {}), 26: ('wagtail.blocks.ListBlock', (app.ciim.blocks.RecordLinkBlock,), {'label': 'Items'}), 27: ('wagtail.blocks.StructBlock', [[('items', 26)]], {}), 28: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 29: ('wagtail.blocks.StructBlock', [[('heading', 28)]], {}), 30: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100, 'required': True}), 31: ('wagtail.blocks.CharBlock', (), {'label': 'YouTube Video ID', 'max_length': 11, 'required': True, 'validators': [django.core.validators.RegexValidator(message='Invalid YouTube Video ID', regex='^[a-zA-Z0-9_-]{11}$')]}), 32: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Preview Image', 'rendition_size': 'fill-640x360', 'required': True}), 33: ('wagtail.blocks.RichTextBlock', (), {'label': 'Transcript', 'required': False}), 34: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Tick if the video has captions on YouTube', 'label': 'Captions available', 'required': False}), 35: ('wagtail.blocks.StructBlock', [[('title', 30), ('video_id', 31), ('preview_image', 32), ('transcript', 33), ('captions_available', 34)]], {}), 36: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 6), ('featured_page', 9), ('image', 12), ('image_gallery', 16), ('media', 20), ('paragraph', 22), ('quote', 25), ('record_links', 27), ('sub_heading', 29), ('youtube_video', 35)]], {'required': False}), 37: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 36)]], {})}, null=True),
        ),
    ]
