# Generated by Django 4.0.8 on 2023-01-27 15:51

from django.db import migrations, models
import django.db.models.deletion
import app.collections.models
import app.ciim.fields
import modelcluster.fields
import wagtail.fields
import wagtailmetadata.models


class Migration(migrations.Migration):
    dependencies = [
        ("wagtailimages", "0024_index_image_file_hash"),
        ("wagtailcore", "0077_alter_revision_user"),
        ("articles", "0047_insights_insight_to_article"),
    ]

    operations = [
        migrations.CreateModel(
            name="RecordArticlePage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "display_content_warning",
                    models.BooleanField(
                        default=False,
                        verbose_name="display a content warning on this page",
                    ),
                ),
                (
                    "custom_warning_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="If specified, will be used for the content warning. Otherwise the default text will be used.",
                        verbose_name="custom content warning text (optional)",
                    ),
                ),
                (
                    "standfirst",
                    models.CharField(max_length=350, verbose_name="standfirst"),
                ),
                (
                    "record",
                    app.ciim.fields.RecordField(
                        db_index=True, verbose_name="record"
                    ),
                ),
                (
                    "date_text",
                    models.CharField(
                        help_text="Date(s) related to the record (max. character length: 100)",
                        max_length=100,
                        verbose_name="date text",
                    ),
                ),
                (
                    "about",
                    wagtail.fields.RichTextField(
                        verbose_name="why this record matters"
                    ),
                ),
                (
                    "image_library_link",
                    models.URLField(
                        blank=True,
                        help_text="Link to an external image library",
                        verbose_name="Image library link",
                    ),
                ),
                (
                    "print_on_demand_link",
                    models.URLField(
                        blank=True,
                        help_text="Link to an external print on demand service",
                        verbose_name="Print on demand link",
                    ),
                ),
                (
                    "featured_article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="articles.articlepage",
                        verbose_name="featured article",
                    ),
                ),
                (
                    "search_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                        verbose_name="Search image",
                    ),
                ),
                (
                    "teaser_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
            ],
            options={
                "verbose_name": "Record Revealed article",
                "verbose_name_plural": "Record Revealed articles",
            },
            bases=(
                app.collections.models.TopicalPageMixin,
                wagtailmetadata.models.WagtailImageMetadataMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="PageGalleryImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "is_sensitive",
                    models.BooleanField(
                        default=False, verbose_name="Is this image sensitive?"
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.',
                        max_length=100,
                        verbose_name="alternative text",
                    ),
                ),
                (
                    "caption",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="An optional caption, which will be displayed directly below the image. This could be used for image sources or for other useful metadata.",
                    ),
                ),
                (
                    "transcription_header",
                    models.CharField(
                        default="Transcript",
                        help_text="Header for the transcription (max length: 50 chars).",
                        max_length=50,
                        verbose_name="transcription header",
                    ),
                ),
                (
                    "transcription_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="An optional transcription of the image (max length: 1500 chars),",
                        max_length=1500,
                        verbose_name="transcription text",
                    ),
                ),
                (
                    "translation_header",
                    models.CharField(
                        default="Translation",
                        help_text="Header for the translation (max length: 50 chars)",
                        max_length=50,
                        verbose_name="translation header",
                    ),
                ),
                (
                    "translation_text",
                    wagtail.fields.RichTextField(
                        blank=True,
                        help_text="An optional translation of the transcription (max length: 1500 chars).",
                        max_length=1500,
                        verbose_name="translation text",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailimages.image",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "gallery image",
                "verbose_name_plural": "gallery images",
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
