# Generated by Django 5.2.4 on 2025-07-15 15:49
# etna:allowRemoveField
# etna:allowAlterField

import app.ciim.blocks
import django.core.validators
import wagtail.fields
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('articles', '0120_alter_articlepage_body_alter_focusedarticlepage_body'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='pagegalleryimage',
            name='alt_text',
        ),
        migrations.RemoveField(
            model_name='recordarticlepage',
            name='promoted_links',
        ),
        migrations.AlterField(
            model_name='articlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 36)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('app.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('app.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 10: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 9), ('caption', 10)]], {}), 12: ('wagtail.blocks.CharBlock', (), {'required': False}), 13: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 14: ('wagtail.blocks.ListBlock', (11,), {}), 15: ('wagtail.blocks.StructBlock', [[('title', 12), ('description', 13), ('images', 14)]], {}), 16: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 17: ('app.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'rendition_size': 'fill-960x540', 'required': False}), 18: ('app.media.blocks.MediaChooserBlock', (), {}), 19: ('wagtail.blocks.StructBlock', [[('title', 16), ('thumbnail', 17), ('media', 18)]], {}), 20: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 21: ('wagtail.blocks.StructBlock', [[('text', 20)]], {}), 22: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 23: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('quote', 22), ('attribution', 23)]], {}), 25: ('wagtail.blocks.ListBlock', (app.ciim.blocks.RecordLinkBlock,), {'label': 'Items'}), 26: ('wagtail.blocks.StructBlock', [[('items', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 28: ('wagtail.blocks.StructBlock', [[('heading', 27)]], {}), 29: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100, 'required': True}), 30: ('wagtail.blocks.CharBlock', (), {'label': 'YouTube Video ID', 'max_length': 11, 'required': True, 'validators': [django.core.validators.RegexValidator(message='Invalid YouTube Video ID', regex='^[a-zA-Z0-9_-]{11}$')]}), 31: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Preview Image', 'rendition_size': 'fill-640x360', 'required': True}), 32: ('wagtail.blocks.RichTextBlock', (), {'label': 'Transcript', 'required': False}), 33: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Tick if the video has captions on YouTube', 'label': 'Captions available', 'required': False}), 34: ('wagtail.blocks.StructBlock', [[('title', 29), ('video_id', 30), ('preview_image', 31), ('transcript', 32), ('captions_available', 33)]], {}), 35: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('image', 11), ('image_gallery', 15), ('media', 19), ('paragraph', 21), ('quote', 24), ('record_links', 26), ('sub_heading', 28), ('youtube_video', 34)]], {'required': False}), 36: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 35)]], {})}, null=True),
        ),
        migrations.AlterField(
            model_name='focusedarticlepage',
            name='body',
            field=wagtail.fields.StreamField([('content_section', 36)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100}), 2: ('wagtail.blocks.CharBlock', (), {'label': 'Description'}), 3: ('wagtail.blocks.URLBlock', (), {'label': 'URL'}), 4: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Image', 'required': False}), 5: ('wagtail.blocks.StructBlock', [[('title', 1), ('description', 2), ('url', 3), ('image', 4)]], {}), 6: ('app.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Page', 'page_type': ['wagtailcore.Page'], 'required': True}), 7: ('wagtail.blocks.CharBlock', (), {'help_text': 'Optional override for the teaser text', 'label': 'Teaser text override', 'required': False}), 8: ('wagtail.blocks.StructBlock', [[('page', 6), ('teaser_text', 7)]], {}), 9: ('app.core.blocks.image.APIImageChooserBlock', (), {'rendition_size': 'max-900x900', 'required': True}), 10: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'help_text': 'If provided, displays directly below the image. Can be used to specify sources, transcripts or other useful metadata.', 'label': 'Caption (optional)', 'required': False}), 11: ('wagtail.blocks.StructBlock', [[('image', 9), ('caption', 10)]], {}), 12: ('wagtail.blocks.CharBlock', (), {'required': False}), 13: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link'], 'required': False}), 14: ('wagtail.blocks.ListBlock', (11,), {}), 15: ('wagtail.blocks.StructBlock', [[('title', 12), ('description', 13), ('images', 14)]], {}), 16: ('wagtail.blocks.CharBlock', (), {'help_text': 'A descriptive title for the media block', 'required': True}), 17: ('app.core.blocks.image.APIImageChooserBlock', (), {'help_text': 'A thumbnail image for the media block', 'rendition_size': 'fill-960x540', 'required': False}), 18: ('app.media.blocks.MediaChooserBlock', (), {}), 19: ('wagtail.blocks.StructBlock', [[('title', 16), ('thumbnail', 17), ('media', 18)]], {}), 20: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 21: ('wagtail.blocks.StructBlock', [[('text', 20)]], {}), 22: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 23: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 24: ('wagtail.blocks.StructBlock', [[('quote', 22), ('attribution', 23)]], {}), 25: ('wagtail.blocks.ListBlock', (app.ciim.blocks.RecordLinkBlock,), {'label': 'Items'}), 26: ('wagtail.blocks.StructBlock', [[('items', 25)]], {}), 27: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 28: ('wagtail.blocks.StructBlock', [[('heading', 27)]], {}), 29: ('wagtail.blocks.CharBlock', (), {'label': 'Title', 'max_length': 100, 'required': True}), 30: ('wagtail.blocks.CharBlock', (), {'label': 'YouTube Video ID', 'max_length': 11, 'required': True, 'validators': [django.core.validators.RegexValidator(message='Invalid YouTube Video ID', regex='^[a-zA-Z0-9_-]{11}$')]}), 31: ('app.core.blocks.image.APIImageChooserBlock', (), {'label': 'Preview Image', 'rendition_size': 'fill-640x360', 'required': True}), 32: ('wagtail.blocks.RichTextBlock', (), {'label': 'Transcript', 'required': False}), 33: ('wagtail.blocks.BooleanBlock', (), {'help_text': 'Tick if the video has captions on YouTube', 'label': 'Captions available', 'required': False}), 34: ('wagtail.blocks.StructBlock', [[('title', 29), ('video_id', 30), ('preview_image', 31), ('transcript', 32), ('captions_available', 33)]], {}), 35: ('wagtail.blocks.StreamBlock', [[('featured_external_link', 5), ('featured_page', 8), ('image', 11), ('image_gallery', 15), ('media', 19), ('paragraph', 21), ('quote', 24), ('record_links', 26), ('sub_heading', 28), ('youtube_video', 34)]], {'required': False}), 36: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 35)]], {})}, null=True),
        ),
    ]
