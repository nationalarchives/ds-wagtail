# Generated by Django 5.2.6 on 2025-10-21 11:10

import app.core.models.mixins
import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alerts', '0003_alert_name_alter_alert_title'),
        ('images', '0013_alter_customimage_description'),
        ('wagtailcore', '0095_groupsitepermission'),
    ]

    operations = [
        migrations.CreateModel(
            name='FoiIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=45, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert')),
                ('search_image', models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image')),
                ('teaser_image', models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('twitter_og_image', models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image')),
            ],
            options={
                'verbose_name': 'Freedom of information listing page',
            },
            bases=(app.core.models.mixins.CustomHeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='FoiRequestPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=45, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('reference', models.CharField(max_length=100, null=True, verbose_name='request reference')),
                ('date', models.DateField(help_text='The date the request was published.', null=True, verbose_name='publication date')),
                ('request', wagtail.fields.StreamField([('content_section', 19), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)], block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 2: ('wagtail.blocks.StructBlock', [[('heading', 1)]], {}), 3: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 4: ('wagtail.blocks.StructBlock', [[('text', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': True}), 6: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link']}), 7: ('wagtail.blocks.StructBlock', [[('term', 5), ('detail', 6)]], {}), 8: ('wagtail.blocks.ListBlock', (7,), {}), 9: ('wagtail.blocks.StructBlock', [[('items', 8)]], {}), 10: ('wagtail.contrib.table_block.blocks.TableBlock', (), {'table_options': {'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo', '---------', 'alignment']}}), 11: ('wagtail.blocks.StructBlock', [[('table', 10)]], {}), 12: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 13: ('wagtail.blocks.StructBlock', [[('title', 5), ('body', 12)]], {}), 14: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': True}), 15: ('wagtail.blocks.StructBlock', [[('file', 14)]], {}), 16: ('wagtail.blocks.ListBlock', (15,), {}), 17: ('wagtail.blocks.StructBlock', [[('documents', 16)]], {}), 18: ('wagtail.blocks.StreamBlock', [[('sub_heading', 2), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)]], {'required': False}), 19: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 18)]], {})}, null=True)),
                ('outcome', models.CharField(choices=[('P', 'Information provided'), ('S', 'Some information provided'), ('N', 'Information not held'), ('W', 'Information withheld'), ('R', 'Request refused')], max_length=1)),
                ('response', wagtail.fields.StreamField([('content_section', 19), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)], block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 2: ('wagtail.blocks.StructBlock', [[('heading', 1)]], {}), 3: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 4: ('wagtail.blocks.StructBlock', [[('text', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': True}), 6: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link']}), 7: ('wagtail.blocks.StructBlock', [[('term', 5), ('detail', 6)]], {}), 8: ('wagtail.blocks.ListBlock', (7,), {}), 9: ('wagtail.blocks.StructBlock', [[('items', 8)]], {}), 10: ('wagtail.contrib.table_block.blocks.TableBlock', (), {'table_options': {'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo', '---------', 'alignment']}}), 11: ('wagtail.blocks.StructBlock', [[('table', 10)]], {}), 12: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 13: ('wagtail.blocks.StructBlock', [[('title', 5), ('body', 12)]], {}), 14: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': True}), 15: ('wagtail.blocks.StructBlock', [[('file', 14)]], {}), 16: ('wagtail.blocks.ListBlock', (15,), {}), 17: ('wagtail.blocks.StructBlock', [[('documents', 16)]], {}), 18: ('wagtail.blocks.StreamBlock', [[('sub_heading', 2), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)]], {'required': False}), 19: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 18)]], {})}, null=True)),
                ('annexe', wagtail.fields.StreamField([('content_section', 19), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'label': 'Heading', 'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'label': 'Sub-heading', 'max_length': 100}), 2: ('wagtail.blocks.StructBlock', [[('heading', 1)]], {}), 3: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul']}), 4: ('wagtail.blocks.StructBlock', [[('text', 3)]], {}), 5: ('wagtail.blocks.CharBlock', (), {'required': True}), 6: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link']}), 7: ('wagtail.blocks.StructBlock', [[('term', 5), ('detail', 6)]], {}), 8: ('wagtail.blocks.ListBlock', (7,), {}), 9: ('wagtail.blocks.StructBlock', [[('items', 8)]], {}), 10: ('wagtail.contrib.table_block.blocks.TableBlock', (), {'table_options': {'contextMenu': ['row_above', 'row_below', '---------', 'col_left', 'col_right', '---------', 'remove_row', 'remove_col', '---------', 'undo', 'redo', '---------', 'alignment']}}), 11: ('wagtail.blocks.StructBlock', [[('table', 10)]], {}), 12: ('app.core.blocks.paragraph.APIRichTextBlock', (), {'features': ['bold', 'italic', 'link', 'ol', 'ul'], 'required': True}), 13: ('wagtail.blocks.StructBlock', [[('title', 5), ('body', 12)]], {}), 14: ('wagtail.documents.blocks.DocumentChooserBlock', (), {'required': True}), 15: ('wagtail.blocks.StructBlock', [[('file', 14)]], {}), 16: ('wagtail.blocks.ListBlock', (15,), {}), 17: ('wagtail.blocks.StructBlock', [[('documents', 16)]], {}), 18: ('wagtail.blocks.StreamBlock', [[('sub_heading', 2), ('paragraph', 4), ('description_list', 9), ('table', 11), ('details', 13), ('document', 17), ('inset_text', 4)]], {'required': False}), 19: ('wagtail.blocks.StructBlock', [[('heading', 0), ('content', 18)]], {})}, null=True)),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert')),
                ('search_image', models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image')),
                ('teaser_image', models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('twitter_og_image', models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image')),
            ],
            options={
                'verbose_name': 'Freedom of information request page',
                'verbose_name_plural': 'Freedom of information request pages',
            },
            bases=(app.core.models.mixins.CustomHeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
    ]
