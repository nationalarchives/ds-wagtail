# Generated by Django 5.2 on 2025-05-01 16:05

import django.db.models.deletion
import modelcluster.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("alerts", "0001_initial"),
        ("collections", "0001_initial"),
        ("images", "0001_initial"),
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.AddField(
            model_name="explorerindexpage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="explorerindexpage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="explorerindexpage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="highlight",
            name="image",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="images.customimage",
                verbose_name="image",
            ),
        ),
        migrations.AddField(
            model_name="highlight",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="page_highlights",
                to="wagtailcore.page",
            ),
        ),
        migrations.AddField(
            model_name="highlightgallerypage",
            name="alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="alerts.alert",
            ),
        ),
        migrations.AddField(
            model_name="highlightgallerypage",
            name="featured_article",
            field=models.ForeignKey(
                blank=True,
                help_text="Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailcore.page",
                verbose_name="featured article",
            ),
        ),
        migrations.AddField(
            model_name="highlightgallerypage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="highlightgallerypage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="highlightgallerypage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="pagetimeperiod",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="page_time_periods",
                to="wagtailcore.page",
            ),
        ),
        migrations.AddField(
            model_name="pagetopic",
            name="page",
            field=modelcluster.fields.ParentalKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="page_topics",
                to="wagtailcore.page",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerindexpage",
            name="alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="alerts.alert",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerindexpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerindexpage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerindexpage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerindexpage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="alerts.alert",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="featured_article",
            field=models.ForeignKey(
                blank=True,
                help_text="Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailcore.page",
                verbose_name="featured article",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="timeperiodexplorerpage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="pagetimeperiod",
            name="time_period",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="time_period_pages",
                to="collections.timeperiodexplorerpage",
                verbose_name="time period",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerindexpage",
            name="alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="alerts.alert",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerindexpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerindexpage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerindexpage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerindexpage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="alert",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="alerts.alert",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="featured_article",
            field=models.ForeignKey(
                blank=True,
                help_text="Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="wagtailcore.page",
                verbose_name="featured article",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="hero_image",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="search_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="teaser_image",
            field=models.ForeignKey(
                blank=True,
                help_text="Image that will appear on thumbnails and promos around the site.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
            ),
        ),
        migrations.AddField(
            model_name="topicexplorerpage",
            name="twitter_og_image",
            field=models.ForeignKey(
                blank=True,
                help_text="If left blank, the OpenGraph image will be used.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="images.customimage",
                verbose_name="Twitter OpenGraph image",
            ),
        ),
        migrations.AddField(
            model_name="pagetopic",
            name="topic",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="topic_pages",
                to="collections.topicexplorerpage",
                verbose_name="topic",
            ),
        ),
    ]
