# Generated by Django 5.2 on 2025-05-01 16:05

import django.db.models.deletion
import etna.analytics.mixins
import etna.collections.models
import etna.core.blocks.promoted_links
import wagtail.fields
import wagtail_headless_preview.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alerts', '0001_initial'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.CreateModel(
            name='Highlight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('alt_text', models.CharField(help_text='Alternative (alt) text describes images when they fail to load, and is read aloud by assistive technologies. Use a maximum of 100 characters to describe your image. <a href="https://html.spec.whatwg.org/multipage/images.html#alt" target="_blank">Check the guidance for tips on writing alt text</a>.', max_length=100, null=True, verbose_name='alternative text')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HighlightGalleryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('custom_warning_text', wagtail.fields.RichTextField(blank=True, help_text='If specified, will be used for the content warning.', verbose_name='custom content warning text (optional)')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
            ],
            options={
                'verbose_name': 'highlight gallery page',
                'verbose_name_plural': 'highlight gallery pages',
            },
            bases=(etna.collections.models.TopicalPageMixin, etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PageTimePeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PageTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimePeriodExplorerIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('body', wagtail.fields.StreamField([('large_card_links', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 1: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link one target', 'required_api_fields': ['teaser_image']}), 2: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link two target', 'required_api_fields': ['teaser_image']}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('page_1', 1), ('page_2', 2)]], {})})),
            ],
            options={
                'abstract': False,
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TimePeriodExplorerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('body', wagtail.fields.StreamField([('promoted_pages', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'max_length': 200}), 2: ('wagtail.blocks.ListBlock', (etna.core.blocks.promoted_links.PromotedLinkBlock,), {'max': 3, 'min': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('sub_heading', 1), ('promoted_items', 2)]], {})})),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField()),
            ],
            options={
                'verbose_name': 'time period page',
                'verbose_name_plural': 'time period pages',
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TopicExplorerIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('body', wagtail.fields.StreamField([('large_card_links', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 1: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link one target', 'required_api_fields': ['teaser_image']}), 2: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link two target', 'required_api_fields': ['teaser_image']}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('page_1', 1), ('page_2', 2)]], {})})),
            ],
            options={
                'abstract': False,
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TopicExplorerPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_image_caption', wagtail.fields.RichTextField(blank=True, help_text='An optional caption for hero images. This could be used for image sources or for other useful metadata.', verbose_name='hero image caption (optional)')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('body', wagtail.fields.StreamField([('promoted_pages', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100}), 1: ('wagtail.blocks.CharBlock', (), {'max_length': 200}), 2: ('wagtail.blocks.ListBlock', (etna.core.blocks.promoted_links.PromotedLinkBlock,), {'max': 3, 'min': 3}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('sub_heading', 1), ('promoted_items', 2)]], {})})),
                ('skos_id', models.CharField(blank=True, db_index=True, help_text='Used as the identifier for this topic when sending page metadata to the CIIM API.', max_length=100, unique=True, verbose_name='SKOS identifier')),
            ],
            options={
                'verbose_name': 'topic page',
                'verbose_name_plural': 'topic pages',
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ExplorerIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('body', wagtail.fields.StreamField([('large_card_links', 3)], blank=True, block_lookup={0: ('wagtail.blocks.CharBlock', (), {'max_length': 100, 'required': False}), 1: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link one target', 'required_api_fields': ['teaser_image']}), 2: ('etna.core.blocks.page_chooser.APIPageChooserBlock', (), {'label': 'Link two target', 'required_api_fields': ['teaser_image']}), 3: ('wagtail.blocks.StructBlock', [[('heading', 0), ('page_1', 1), ('page_2', 2)]], {})})),
                ('articles_title', models.CharField(blank=True, default='Stories from the collection', help_text='The title to display for the articles section.', max_length=100)),
                ('articles_introduction', models.CharField(blank=True, help_text='The introduction to display for the articles section.', max_length=200)),
                ('featured_articles', wagtail.fields.StreamField([('featuredarticles', 1)], blank=True, block_lookup={0: ('etna.core.blocks.page_list.PageListBlock', ('articles.ArticlePage', 'articles.RecordArticlePage', 'articles.FocusedArticlePage'), {'max_num': 6, 'min_num': 3}), 1: ('wagtail.blocks.StructBlock', [[('items', 0)]], {})}, null=True)),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert')),
                ('featured_article', models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='featured article')),
            ],
            options={
                'abstract': False,
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
    ]
