# Generated by Django 5.2 on 2025-05-01 16:05

import django.db.models.deletion
import wagtail.fields
import wagtail_headless_preview.models
from django.db import migrations, models

import etna.analytics.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("alerts", "0001_initial"),
        ("wagtailcore", "0094_alter_page_locale"),
    ]

    operations = [
        migrations.CreateModel(
            name="CookiesPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "twitter_og_title",
                    models.CharField(
                        blank=True,
                        help_text="If left blank, the OpenGraph title will be used.",
                        max_length=255,
                        null=True,
                        verbose_name="Twitter OpenGraph title",
                    ),
                ),
                (
                    "twitter_og_description",
                    models.TextField(
                        blank=True,
                        help_text="If left blank, the OpenGraph description will be used.",
                        null=True,
                        verbose_name="Twitter OpenGraph description",
                    ),
                ),
                (
                    "short_title",
                    models.CharField(
                        blank=True,
                        help_text="A shorter title for use in breadcrumbs and other navigational elements, where applicable.",
                        max_length=30,
                        null=True,
                        verbose_name="short title",
                    ),
                ),
                (
                    "teaser_text",
                    models.TextField(
                        help_text="A short, enticing description of this page. This will appear in promos and under thumbnails around the site.",
                        max_length=160,
                        verbose_name="teaser text",
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        help_text="1-2 sentences introducing the subject of the page, and explaining why a user should read on.",
                        max_length=300,
                        verbose_name="introductory text",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(
                etna.analytics.mixins.DataLayerMixin,
                wagtail_headless_preview.models.HeadlessPreviewMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CookieDetailsPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "twitter_og_title",
                    models.CharField(
                        blank=True,
                        help_text="If left blank, the OpenGraph title will be used.",
                        max_length=255,
                        null=True,
                        verbose_name="Twitter OpenGraph title",
                    ),
                ),
                (
                    "twitter_og_description",
                    models.TextField(
                        blank=True,
                        help_text="If left blank, the OpenGraph description will be used.",
                        null=True,
                        verbose_name="Twitter OpenGraph description",
                    ),
                ),
                (
                    "short_title",
                    models.CharField(
                        blank=True,
                        help_text="A shorter title for use in breadcrumbs and other navigational elements, where applicable.",
                        max_length=30,
                        null=True,
                        verbose_name="short title",
                    ),
                ),
                (
                    "teaser_text",
                    models.TextField(
                        help_text="A short, enticing description of this page. This will appear in promos and under thumbnails around the site.",
                        max_length=160,
                        verbose_name="teaser text",
                    ),
                ),
                (
                    "intro",
                    wagtail.fields.RichTextField(
                        help_text="1-2 sentences introducing the subject of the page, and explaining why a user should read on.",
                        max_length=300,
                        verbose_name="introductory text",
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            ("inset_text", 1),
                            ("paragraph", 1),
                            ("description_list", 6),
                            ("table", 8),
                            ("content_section", 13),
                        ],
                        blank=True,
                        block_lookup={
                            0: (
                                "etna.core.blocks.paragraph.APIRichTextBlock",
                                (),
                                {
                                    "features": [
                                        "bold",
                                        "italic",
                                        "link",
                                        "ol",
                                        "ul",
                                    ]
                                },
                            ),
                            1: (
                                "wagtail.blocks.StructBlock",
                                [[("text", 0)]],
                                {},
                            ),
                            2: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"required": True},
                            ),
                            3: (
                                "etna.core.blocks.paragraph.APIRichTextBlock",
                                (),
                                {"features": ["bold", "italic", "link"]},
                            ),
                            4: (
                                "wagtail.blocks.StructBlock",
                                [[("term", 2), ("detail", 3)]],
                                {},
                            ),
                            5: ("wagtail.blocks.ListBlock", (4,), {}),
                            6: (
                                "wagtail.blocks.StructBlock",
                                [[("items", 5)]],
                                {},
                            ),
                            7: (
                                "wagtail.contrib.table_block.blocks.TableBlock",
                                (),
                                {
                                    "table_options": {
                                        "contextMenu": [
                                            "row_above",
                                            "row_below",
                                            "---------",
                                            "col_left",
                                            "col_right",
                                            "---------",
                                            "remove_row",
                                            "remove_col",
                                            "---------",
                                            "undo",
                                            "redo",
                                            "---------",
                                            "alignment",
                                        ]
                                    }
                                },
                            ),
                            8: (
                                "wagtail.blocks.StructBlock",
                                [[("table", 7)]],
                                {},
                            ),
                            9: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"label": "Heading", "max_length": 100},
                            ),
                            10: (
                                "wagtail.blocks.CharBlock",
                                (),
                                {"label": "Sub-heading", "max_length": 100},
                            ),
                            11: (
                                "wagtail.blocks.StructBlock",
                                [[("heading", 10)]],
                                {},
                            ),
                            12: (
                                "wagtail.blocks.StreamBlock",
                                [
                                    [
                                        ("inset_text", 1),
                                        ("paragraph", 1),
                                        ("description_list", 6),
                                        ("sub_heading", 11),
                                        ("table", 8),
                                    ]
                                ],
                                {"required": False},
                            ),
                            13: (
                                "wagtail.blocks.StructBlock",
                                [[("heading", 9), ("content", 12)]],
                                {},
                            ),
                        },
                        null=True,
                    ),
                ),
                (
                    "alert",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="alerts.alert",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cookie details page",
                "verbose_name_plural": "Cookie details pages",
            },
            bases=(
                etna.analytics.mixins.DataLayerMixin,
                wagtail_headless_preview.models.HeadlessPreviewMixin,
                "wagtailcore.page",
                models.Model,
            ),
        ),
    ]
