# Generated by Django 5.2 on 2025-05-29 11:30

import django.db.models.deletion
import etna.analytics.mixins
import modelcluster.fields
import wagtail.fields
import wagtail_headless_preview.models
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('alerts', '0003_alert_name_alter_alert_title'),
        ('images', '0010_alter_customimage_copyright'),
        ('wagtailcore', '0094_alter_page_locale'),
        ('whatson', '0025_remove_eventpage_article_tag_names_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='whatsonpage',
            name='featured_event',
        ),
        migrations.RemoveField(
            model_name='whatsonpage',
            name='large_card_links',
        ),
        migrations.RemoveField(
            model_name='whatsonpage',
            name='promoted_links',
        ),
        migrations.CreateModel(
            name='WhatsOnSeriesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('twitter_og_title', models.CharField(blank=True, help_text='If left blank, the OpenGraph title will be used.', max_length=255, null=True, verbose_name='Twitter OpenGraph title')),
                ('twitter_og_description', models.TextField(blank=True, help_text='If left blank, the OpenGraph description will be used.', null=True, verbose_name='Twitter OpenGraph description')),
                ('short_title', models.CharField(blank=True, help_text='A shorter title for use in breadcrumbs and other navigational elements, where applicable.', max_length=30, null=True, verbose_name='short title')),
                ('teaser_text', models.TextField(help_text='A short, enticing description of this page. This will appear in promos and under thumbnails around the site.', max_length=160, verbose_name='teaser text')),
                ('intro', wagtail.fields.RichTextField(help_text='1-2 sentences introducing the subject of the page, and explaining why a user should read on.', max_length=300, verbose_name='introductory text')),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert')),
                ('search_image', models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image')),
                ('teaser_image', models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage')),
                ('twitter_og_image', models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image')),
            ],
            options={
                'verbose_name': "What's On series page",
            },
            bases=(etna.analytics.mixins.DataLayerMixin, wagtail_headless_preview.models.HeadlessPreviewMixin, 'wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='CategoryListing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('page', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_listings', to='wagtailcore.page')),
                ('category', models.ForeignKey(help_text="The category to list on the What's On page.", on_delete=django.db.models.deletion.CASCADE, related_name='listing_categories', to='whatson.whatsonseriespage', verbose_name='category')),
            ],
            options={
                'verbose_name': 'category listing',
                'verbose_name_plural': 'category listings',
            },
        ),
    ]
