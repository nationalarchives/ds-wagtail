# Generated by Django 5.2 on 2025-05-01 16:05

import django.db.models.deletion
import etna.ciim.fields
import taggit.managers
import wagtail.fields
import wagtail.images.models
import wagtail.models.media
import wagtail.search.index
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('wagtailcore', '0094_alter_page_locale'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', wagtail.images.models.WagtailImageField(height_field='height', upload_to=wagtail.images.models.get_upload_to, verbose_name='file', width_field='width')),
                ('width', models.IntegerField(editable=False, verbose_name='width')),
                ('height', models.IntegerField(editable=False, verbose_name='height')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='created at')),
                ('focal_point_x', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_y', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_width', models.PositiveIntegerField(blank=True, null=True)),
                ('focal_point_height', models.PositiveIntegerField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(editable=False, null=True)),
                ('file_hash', models.CharField(blank=True, db_index=True, editable=False, max_length=40)),
                ('title', models.CharField(help_text='The descriptive name of the image. If this image features in a highlights gallery, this title will be visible on the page.', max_length=255, verbose_name='title')),
                ('copyright', wagtail.fields.RichTextField(blank=True, help_text='Credit for images not owned by TNA. Do not include the copyright symbol.', max_length=200, verbose_name='copyright')),
                ('is_sensitive', models.BooleanField(default=False, help_text='Tick this if the image contains content which some people may find offensive or distressing. For example, photographs of violence or injury detail.', verbose_name='This image is considered sensitive')),
                ('custom_sensitive_image_warning', models.CharField(blank=True, help_text='Replaces the default warning message where the image is displayed. For example: "This image has been marked as potentially sensitive because it contains depictions of violence".', max_length=200, verbose_name='Why might this image be considered sensitive? (optional)')),
                ('transcription_heading', models.CharField(choices=[('transcript', 'Transcript'), ('partial-transcript', 'Partial transcript')], default='transcript', max_length=30, verbose_name='transcript heading')),
                ('transcription', wagtail.fields.RichTextField(blank=True, help_text='If the image contains text consider adding a transcript.', max_length=1500, verbose_name='transcript')),
                ('translation_heading', models.CharField(choices=[('translation', 'Translation'), ('modern-english', 'Modern English')], default='translation', help_text='If the original transcription language is some earlier form of English, choose "Modern English". If not, choose “Translation”.', max_length=30, verbose_name='translation heading')),
                ('translation', wagtail.fields.RichTextField(blank=True, help_text='An optional English / Modern English translation of the transcription.', max_length=1500, verbose_name='translation')),
                ('record', etna.ciim.fields.RecordField(blank=True, db_index=True, help_text='If the image relates to a specific record, select that record here.', verbose_name='related record')),
                ('record_dates', models.CharField(blank=True, help_text='Date(s) related to the selected record (max length: 100 chars).', max_length=100, verbose_name='record date(s)')),
                ('description', wagtail.fields.RichTextField(blank=True, help_text='This text will appear in highlights galleries. A 100-300 word description of the story of the record and why it is significant.', max_length=900, verbose_name='description')),
                ('collection', models.ForeignKey(default=wagtail.models.media.get_root_collection_id, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.collection', verbose_name='collection')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text=None, through='taggit.TaggedItem', to='taggit.Tag', verbose_name='tags')),
                ('uploaded_by_user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='uploaded by user')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.images.models.ImageFileMixin, wagtail.search.index.Indexed, models.Model),
        ),
        migrations.CreateModel(
            name='CustomImageRendition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter_spec', models.CharField(db_index=True, max_length=255)),
                ('file', wagtail.images.models.WagtailImageField(height_field='height', storage=wagtail.images.models.get_rendition_storage, upload_to=wagtail.images.models.get_rendition_upload_to, width_field='width')),
                ('width', models.IntegerField(editable=False)),
                ('height', models.IntegerField(editable=False)),
                ('focal_point_key', models.CharField(blank=True, default='', editable=False, max_length=16)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='renditions', to='images.customimage')),
            ],
            options={
                'unique_together': {('image', 'filter_spec', 'focal_point_key')},
            },
            bases=(wagtail.images.models.ImageFileMixin, models.Model),
        ),
    ]
