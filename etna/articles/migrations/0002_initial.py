# Generated by Django 5.2 on 2025-05-01 16:05

import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alerts', '0001_initial'),
        ('articles', '0001_initial'),
        ('collections', '0001_initial'),
        ('images', '0001_initial'),
        ('wagtailcore', '0094_alter_page_locale'),
    ]

    operations = [
        migrations.AddField(
            model_name='articleindexpage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='articleindexpage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='hero_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='hero_image',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='pagegalleryimage',
            name='image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='pagegalleryimage',
            name='page',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='gallery_images', to='wagtailcore.page'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='alert',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='alerts.alert'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='featured_article',
            field=models.ForeignKey(blank=True, help_text='Select a page to display in the featured area. This can be an Article, Focused Article or Record Article.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='featured article'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='featured_highlight_gallery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='collections.highlightgallerypage', verbose_name='featured highlight gallery'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='intro_image',
            field=models.ForeignKey(blank=True, help_text='Square, rotated image to display in the page introduction', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='intro image'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='search_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear when this page is shared on social media. This will default to the teaser image if left blank.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='OpenGraph image'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='teaser_image',
            field=models.ForeignKey(blank=True, help_text='Image that will appear on thumbnails and promos around the site.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='twitter_og_image',
            field=models.ForeignKey(blank=True, help_text='If left blank, the OpenGraph image will be used.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.customimage', verbose_name='Twitter OpenGraph image'),
        ),
        migrations.AddField(
            model_name='taggedarticle',
            name='content_object',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_items', to='wagtailcore.page'),
        ),
        migrations.AddField(
            model_name='taggedarticle',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tagged_article', to='articles.articletag'),
        ),
        migrations.AddField(
            model_name='recordarticlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='articles.ArticleTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='focusedarticlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='articles.ArticleTag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='articlepage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='articles.TaggedArticle', to='articles.ArticleTag', verbose_name='Tags'),
        ),
    ]
